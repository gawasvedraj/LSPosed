name: Core

on:
  workflow_dispatch:
  pull_request:
  merge_group:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
      CCACHE_BASEDIR: "${{ github.workspace }}"
      moduleName: "LSPosed"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: "recursive"
          fetch-depth: 0

      - name: Write key
        if: ${{ ( github.event_name != 'pull_request' && github.ref == 'refs/heads/master' ) || github.ref_type == 'tag' }}
        run: |
          if [ ! -z "${{ secrets.KEY_STORE }}" ]; then
            echo androidStorePassword='${{ secrets.KEY_STORE_PASSWORD }}' >> gradle.properties
            echo androidKeyAlias='${{ secrets.ALIAS }}' >> gradle.properties
            echo androidKeyPassword='${{ secrets.KEY_PASSWORD }}' >> gradle.properties
            echo androidStoreFile='key.jks' >> gradle.properties
            echo ${{ secrets.KEY_STORE }} | base64 --decode > key.jks
          fi

      - name: Checkout DanGLES3/api
        uses: actions/checkout@v4
        with:
          repository: DanGLES3/api
          path: libxposed/api

      - name: Checkout DanGLES3/service
        uses: actions/checkout@v4
        with:
          repository: DanGLES3/service
          path: libxposed/service

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-home-cache-cleanup: true

      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 2G
          key: ${{ runner.os }}
          restore-keys: ${{ runner.os }}
          save: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}

      - name: Build dependencies
        working-directory: libxposed
        run: |
          echo 'org.gradle.caching=true' >> ~/.gradle/gradle.properties
          echo 'org.gradle.parallel=true' >> ~/.gradle/gradle.properties
          echo 'org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8 -XX:+UseParallelGC' >> ~/.gradle/gradle.properties
          echo 'android.native.buildOutput=verbose' >> ~/.gradle/gradle.properties
          cd api
          ./gradlew publishToMavenLocal
          cd ../service
          ./gradlew publishToMavenLocal

      - name: Build with Gradle
        run: |
          ./gradlew zipAll

      - name: Prepare artifact
        if: success()
        id: prepareArtifact
        run: |
          fileNamePrefix="$moduleName-v" 
          riruReleaseName=`ls $fileNamePrefix*-riru-release.zip | awk -F '(.zip)' '{print $1}'` && echo "riruReleaseName=$riruReleaseName" >> $GITHUB_OUTPUT
          riruDebugName=`ls $fileNamePrefix*-riru-debug.zip | awk -F '(.zip)' '{print $1}'` && echo "riruDebugName=$riruDebugName" >> $GITHUB_OUTPUT
          zygiskReleaseName=`ls $fileNamePrefix*-zygisk-release.zip | awk -F '(.zip)' '{print $1}'` && echo "zygiskReleaseName=$zygiskReleaseName" >> $GITHUB_OUTPUT
          zygiskDebugName=`ls $fileNamePrefix*-zygisk-debug.zip | awk -F '(.zip)' '{print $1}'` && echo "zygiskDebugName=$zygiskDebugName" >> $GITHUB_OUTPUT
          unzip $fileNamePrefix*-riru-release.zip -d $moduleName-riru-release
          unzip $fileNamePrefix*-riru-debug.zip -d $moduleName-riru-debug
          unzip $fileNamePrefix*-zygisk-release.zip -d $moduleName-zygisk-release
          unzip $fileNamePrefix*-zygisk-debug.zip -d $moduleName-zygisk-debug
        working-directory: magisk-loader/release

      - name: Upload riru release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.prepareArtifact.outputs.riruReleaseName }}
          path: magisk-loader/release/${{ env.moduleName }}-riru-release

      - name: Upload riru debug
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.prepareArtifact.outputs.riruDebugName }}
          path: magisk-loader/release/${{ env.moduleName }}-riru-debug

      - name: Upload zygisk release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.prepareArtifact.outputs.zygiskReleaseName }}
          path: magisk-loader/release/${{ env.moduleName }}-zygisk-release

      - name: Upload zygisk debug
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.prepareArtifact.outputs.zygiskDebugName }}
          path: magisk-loader/release/${{ env.moduleName }}-zygisk-debug

      - name: Upload mappings
        uses: actions/upload-artifact@v4
        with:
          name: mappings
          path: |
            magisk-loader/build/outputs/mapping
            app/build/outputs/mapping

      - name: Upload symbols
        uses: actions/upload-artifact@v4
        with:
          name: symbols
          path: build/symbols

